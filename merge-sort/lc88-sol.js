/*

這段程式碼是使用 JavaScript 實現了一個合併兩個有序數組的函數 merge，並將結果修改在 nums1 中。這個函數的主要目的是將 nums2 合併到 nums1 中，並保持合併後的 nums1 仍然有序。

這個函數的參數包括兩個有序數組 nums1 和 nums2，以及它們的長度 m 和 n。具體步驟如下：

初始化三個指針 i、j 和 k，分別指向 nums1、nums2 和合併後的結果的末尾。

進入一個 while 迴圈，只要 nums1 和 nums2 都還有元素，就持續進行合併操作。在迴圈中，比較 nums1 和 nums2 中對應位置的元素，將較大的元素放入合併後的結果中。

如果 nums2 中還有剩餘的元素，則將它們一個個放入合併後的結果中。

這樣的寫法可以確保合併後的 nums1 仍然保持有序，並且避免使用額外的空間。這樣的合併方式在時間和空間複雜度上都是最優的。
*/
var merge = function (a, m, b, n) {
    let i = m - 1;
    let j = n - 1;
    let k = m + n - 1;
  
    while (i >= 0 && j >= 0) {
      if (a[i] > b[j]) {
        a[k--] = a[i--];
      } else {
        a[k--] = b[j--];
      }
    }
  
    while (j >= 0) {
      a[k--] = b[j--];
    }
  };